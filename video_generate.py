# -*- coding: utf-8 -*-"""Created on Wed Oct 13 19:07:46 2021@author: Riad"""import cv2import numpy as np from argparse import ArgumentParserimport timedef call_for_video(path):    import glob    # All files ending with .txt    print(glob.glob(path+"*.mp4"))    videos=glob.glob(path+"*.mp4")    out = cv2.VideoWriter('output.mp4',cv2.VideoWriter_fourcc('M','J','P','G'), 10, (1920,1080))    cap=[]    for video in videos:    	cap.append(cv2.VideoCapture(video))        time.sleep(1)    while cap[0].isOpened() or cap[1].isOpened() or cap[2].isOpened() or cap[3].isOpened():        #print(cap[0].isOpened())        if cap[0].isOpened()==True:            okay1  , frame1 = cap[0].read()            if okay1==False:                cap[0].release()                frame1 = np.zeros((1080,1920,3), np.uint8)        else:            frame1 = np.zeros((1080,1920,3), np.uint8)            if cap[1].isOpened()==True:                    okay2  , frame2 = cap[1].read()            if okay2==False:                cap[1].release()                frame2 = np.zeros((1080,1920,3), np.uint8)        else:                frame2 = np.zeros((1080,1920,3), np.uint8)                if cap[2].isOpened()==True:            okay3  , frame3 = cap[2].read()            if okay3==False:                cap[2].release()                frame3 = np.zeros((1080,1920,3), np.uint8)        else:                frame4 = np.zeros((1080,1920,3), np.uint8)        if cap[3].isOpened()==True:                      okay4  , frame4 = cap[3].read()            #print(okay4)            if okay4==False:                cap[3].release()                frame4 = np.zeros((1080,1920,3), np.uint8)        else:                 frame4 = np.zeros((1080,1920,3), np.uint8)        frame_h1=cv2.hconcat([frame1, frame2])        frame_h1=cv2.resize(frame_h1,(1920,540))        frame_h2=cv2.hconcat([frame3, frame4])        frame_h2=cv2.resize(frame_h2,(1920,540))        frame=cv2.vconcat([frame_h1, frame_h2])        frame=cv2.resize(frame,(1920,1080))        img=frame        out.write(frame)